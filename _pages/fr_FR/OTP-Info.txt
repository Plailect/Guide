---
title: "Informations sur l'OTP"
permalink: /otp-info.html
lang: fr_FR
ref: otp-info
---

L'OTP est une série de 0x100 octets de données qui semblent aléatoires à l'adresse 0x10012000. Les clés uniques spécifiques à votre console sont probablement générées à partir de cette région, bien qu'on ne sache pas exactement comment. Il s'agit probablement de l'endroit où sont stockées les données spécifiques à la console qui est décrypté par le bootrom, mais nous ne saurons pas comment il le fait tant que le bootrom, qui est protégé, n'aura pas été entièrement dumpé. A l'heure actuelle nous ne savons pas si quelqu’un a réussi à dumper le bootrom dans sa totalité.

Jusqu'à la version 3.0.0-X, la région à l'adresse 0x10012000 (l'OTP) n'était pas protégée et pouvait être dumpée avec des permissions suffisantes (exécution de code arm9).

A partir de la version 3.0.0-X, cette région est protégée par Nintendo en utilisant le registre CFG_SYSPROT9, qui protège notamment le bootloader et est appliqué extrêmement tôt dans le processus de démarrage de la console, bien avant que nous ne puissions exécuter le moindre code. Ce registre peut être activé une fois seulement, et ne peut pas être désactivé avant l'extinction complète de la console, ce qui rend impossible le dump de l'OTP dans les versions 3.0.0-X et supérieures.

Il est cependant possible de dumper le hash (signature) de l'OTP en 9.6.0-X. Comme le Kernel9Loader n'efface pas le registre SHA_HASH après l'avoir utilisé, dumper SHA_HASH permet d'obtenir le hash de l'OTP que le Kernel9Loader a passé à Kernel9. De plus, il existe depuis longtemps une faille où un reboot du MCU causé par l'i2c n'efface pas la RAM comme il le devrait.

Cela permet, grâce à une attaque matérielle, d'écrire des données arbitraires à nand_sector+0x10 dans une sauvegarde de la SysNAND et de la flasher vers la console. Ensuite, grâce au hardmod, nous pouvons forcer l'i2c à déclencher un redémarrage du MCU, écrire quelque part dans la mémoire arm9 un payload (qui se chargera de copier la région 0x1000A040 - 0x1000A060 dans un fichier sur la carte SD) et remplir la mémoire avec un NOP sled suivi par une instruction JMP pointant vers le payload. Il suffit ensuite de redémarrer le mCU en boucle (en incrémentant nand_sector+0x10 de 1 à chaque fois) jusqu'à ce que le Kernel9Loader se déplace par hasard sur le payload.

A cause de la complexité et du matériel supplémentaire nécessaires pour la technique ci-dessus, j'ai décidé de limiter ce guide strictement à la méthode logicielle qui consiste à faire un downgrade vers une version inférieure à 3.0.0-X. La version 2.1.0-X a été sélectionnée car c'est la seule version inférieure à 3.0.0-X qui possède un navigateur internet exploitable (la version 2.0.0-X a également un navigateur partiellement exploitable, mais cela ne fonctionne pas pour d'autres raison).

Ce processus nécessite de flasher votre CTRNAND en 2.1.0-4. Ceci est accompli en installant une image préfabriquée de CTRNAND comprenant la version 2.1.0, en y copiant les fichiers spécifiques à votre console (comme 'moveable.sed' et 'SecureInfo_A'), puis en y réparant la liste des titres CMACS. Sur New3DS, il nécessite également de changer le slot de cryptage de la CTRNAND et d'installer un header de Old 3DS sur la NAND, afin de permettre à la console de démarrer avec un firmware 2.1.0 réservé aux Old 3DS.